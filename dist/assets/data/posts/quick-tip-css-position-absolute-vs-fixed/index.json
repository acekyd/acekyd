{"hash":"cbec07856b7015784cd9557ee616d1a27c707855","data":{"post":{"title":"Quick Tip - CSS position absolute vs fixed","path":"/posts/quick-tip-css-position-absolute-vs-fixed/","date":"1. January 2020","timeToRead":1,"tags":[{"id":"Tips","title":"Tips","path":"/tag/Tips/"},{"id":"Web","title":"Web","path":"/tag/Web/"},{"id":"CSS","title":"CSS","path":"/tag/CSS/"}],"description":"Positioning in CSS can be a tricky business. A common issue however is between deciding to use position:fixed or position:absolute. Here's a tip to help with that.","content":"<p>Positioning in CSS can be a tricky business. A common issue however is between deciding to use <code>position:\"fixed\"</code> or <code>position:\"absolute\"</code>. Here's a tip to help with that.</p>\n<p>The <code>position</code> CSS property is used to specify how you want an element to be placed on a web page. There are five possible values, <code>static</code>, <code>relative</code>, <code>sticky</code>, <code>fixed</code> and <code>absolute</code>.</p>\n<p>When trying to decide between <code>absolute</code> and <code>fixed</code> - for a content that should be 'fixed' to a spot, it's important to identify the context we want this element to appear.</p>\n<h2 id=\"fixed-postioning\"><a href=\"#fixed-postioning\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Fixed Postioning</h2>\n<p>With fixed positioning, the element is always fixed to a location relative to the browser's display or viewport. Like having a navbar always stuck to the bottom or top of the screen. This element is completely removed from the normal flow of the page.</p>\n<pre><code class=\"language-css\">.fixed-item {\n    position:fixed;\n    top:0;\n    right:0;\n}\n</code></pre>\n<h2 id=\"absolute-positioning\"><a href=\"#absolute-positioning\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Absolute Positioning</h2>\n<p> If we however want it to be 'fixed' to a spot relative to another element or as a child of another element, we go with <code>absolute</code> along with the top, left, right or bottom attributes as needed. This parent element however needs to have position set to <code>relative</code>.</p>\n<pre><code class=\"language-html\">&#x3C;div class=\"parent-item\">\n    This div element is the parent\n    &#x3C;div class=\"absolute-item\">This div element is set to absolute&#x3C;/div>\n&#x3C;/div>\n</code></pre>\n<pre><code class=\"language-css\">.parent-item {\n   position: relative;\n}\n\n.absolute-item {\n   position:absolute;\n   top: 10px;\n   left: 10px;\n}\n</code></pre>\n<p> Are there other things you look out for when trying to choose which positioning property to use? Please share in the comments. Thanks for reading :)</p>\n","cover_image":null}},"context":{}}