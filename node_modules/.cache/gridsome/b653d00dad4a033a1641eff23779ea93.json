{"remainingRequest":"/Users/adewaleabati/Documents/code/acekyd/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/adewaleabati/Documents/code/acekyd/node_modules/gridsome/app/entry.sockjs.js","dependencies":[{"path":"/Users/adewaleabati/Documents/code/acekyd/node_modules/gridsome/app/entry.sockjs.js","mtime":499162500000},{"path":"/Users/adewaleabati/Documents/code/acekyd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adewaleabati/Documents/code/acekyd/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import fetch from './fetch';\nimport router from './router';\nimport SockJS from 'sockjs-client';\nimport { formatError, clearAllResults, setResults } from './graphql/shared';\nvar sock = new SockJS(process.env.SOCKJS_ENDPOINT);\n\nsock.onmessage = function (message) {\n  var data = JSON.parse(message.data);\n\n  switch (data.type) {\n    case 'fetch':\n      fetch(router.currentRoute, {\n        force: true\n      }).then(function (res) {\n        if (res.errors) {\n          formatError(res.errors[0], router.currentRoute);\n        } else {\n          clearAllResults(router.currentRoute.path);\n          setResults(router.currentRoute.path, res);\n        }\n      })[\"catch\"](function (err) {\n        return formatError(err, router.currentRoute);\n      });\n      break;\n  }\n};",{"version":3,"sources":["/Users/adewaleabati/Documents/code/acekyd/node_modules/gridsome/app/entry.sockjs.js"],"names":["fetch","router","SockJS","formatError","clearAllResults","setResults","sock","process","env","SOCKJS_ENDPOINT","onmessage","message","data","JSON","parse","type","currentRoute","force","then","res","errors","path","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,UAAvC,QAAyD,kBAAzD;AAEA,IAAMC,IAAI,GAAG,IAAIJ,MAAJ,CAAWK,OAAO,CAACC,GAAR,CAAYC,eAAvB,CAAb;;AAEAH,IAAI,CAACI,SAAL,GAAiB,UAAAC,OAAO,EAAI;AAC1B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACC,IAAnB,CAAb;;AAEA,UAAQA,IAAI,CAACG,IAAb;AACE,SAAK,OAAL;AACEf,MAAAA,KAAK,CAACC,MAAM,CAACe,YAAR,EAAsB;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAtB,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAIA,GAAG,CAACC,MAAR,EAAgB;AACdjB,UAAAA,WAAW,CAACgB,GAAG,CAACC,MAAJ,CAAW,CAAX,CAAD,EAAgBnB,MAAM,CAACe,YAAvB,CAAX;AACD,SAFD,MAEO;AACLZ,UAAAA,eAAe,CAACH,MAAM,CAACe,YAAP,CAAoBK,IAArB,CAAf;AACAhB,UAAAA,UAAU,CAACJ,MAAM,CAACe,YAAP,CAAoBK,IAArB,EAA2BF,GAA3B,CAAV;AACD;AACF,OARH,WASS,UAAAG,GAAG;AAAA,eAAInB,WAAW,CAACmB,GAAD,EAAMrB,MAAM,CAACe,YAAb,CAAf;AAAA,OATZ;AAWA;AAbJ;AAeD,CAlBD","sourcesContent":["import fetch from './fetch'\nimport router from './router'\nimport SockJS from 'sockjs-client'\nimport { formatError, clearAllResults, setResults } from './graphql/shared'\n\nconst sock = new SockJS(process.env.SOCKJS_ENDPOINT)\n\nsock.onmessage = message => {\n  const data = JSON.parse(message.data)\n\n  switch (data.type) {\n    case 'fetch':\n      fetch(router.currentRoute, { force: true })\n        .then(res => {\n          if (res.errors) {\n            formatError(res.errors[0], router.currentRoute)\n          } else {\n            clearAllResults(router.currentRoute.path)\n            setResults(router.currentRoute.path, res)\n          }\n        })\n        .catch(err => formatError(err, router.currentRoute))\n\n      break\n  }\n}\n"]}]}